package org.example.model;

import javax.persistence.*;

@Entity
@Table(name = "Person")
public class Person {
    @Id
    @Column(name = "id")
    //strategy = GenerationType.IDENTITY means
    // that generation of the key for id will be
    // completely performed on the Postgres-side.
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    /* Example code for strategy = GenerationType.SEQUENCE:
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
        generator = "seq_generator_person")
    @SequenceGenerator(name = "seq_generator_person",
        sequenceName = "person_id_seq",
        allocationSize = 1)
     */
    private int id;

    @Column(name = "name")
    private  String name;

    @Column(name = "age")
    private int age;

    public Person() {}

    //Constructor for the Lesson#48, where we pass id directly from this application
    public Person(int id, String name, int age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }

    //Constructor for all other cases, where value for id will be generated on the Postgres side
    //(GENERATED BY DEFAULT AS IDENTITY)
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}
